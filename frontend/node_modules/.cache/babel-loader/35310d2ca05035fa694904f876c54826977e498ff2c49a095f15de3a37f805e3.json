{"ast":null,"code":"const BASE_URL = 'http://localhost:8000';\nconst API = {\n  async postLogin(formData) {\n    const endpoint = '/user/login';\n    return await fetchAndHandleResponse(endpoint, 'POST', formData);\n  },\n  async postForm(formData) {\n    const endpoint = '/form';\n    return await fetchAndHandleResponse(endpoint, 'POST', formData);\n  },\n  async getUserData(userId) {\n    const endpoint = `/user/${userId}`;\n    const headers = getHeadersWithToken();\n    return await fetchAndHandleResponse(endpoint, 'GET', headers);\n  },\n  async updateUserData(userId, newData) {\n    const endpoint = `/user/${userId}`;\n    const headers = getHeadersWithToken();\n    return await fetchAndHandleResponse(endpoint, 'PUT', headers, newData);\n  },\n  async deleteUser(userId) {\n    const endpoint = `/user/${userId}`;\n    const headers = getHeadersWithToken();\n    return await fetchAndHandleResponse(endpoint, 'DELETE', headers);\n  },\n  async getForm(formId) {\n    const endpoint = `/form/${formId}`;\n    const headers = getHeadersWithToken();\n    return await fetchAndHandleResponse(endpoint, 'GET', headers);\n  },\n  async updateForm(formId, updatedFormData) {\n    const endpoint = `/form/${formId}`;\n    const headers = getHeadersWithToken();\n    return await fetchAndHandleResponse(endpoint, 'PUT', headers, updatedFormData);\n  },\n  async deleteForm(formId) {\n    const endpoint = `/form/${formId}`;\n    const headers = getHeadersWithToken();\n    return await fetchAndHandleResponse(endpoint, 'DELETE', headers);\n  },\n  async getAllForms() {\n    const endpoint = '/form';\n    const headers = getHeadersWithToken();\n    return await fetchAndHandleResponse(endpoint, 'GET', headers);\n  },\n  storeToken(token) {\n    localStorage.setItem('token', token);\n  },\n  getToken() {\n    return localStorage.getItem('token');\n  },\n  removeToken() {\n    localStorage.removeItem('token');\n  }\n};\nasync function fetchAndHandleResponse(endpoint, method, headers, body) {\n  try {\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    return {\n      success: false,\n      error: 'Error de red'\n    };\n  }\n}\nfunction getHeadersWithToken() {\n  const token = API.getToken();\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  return headers;\n}\nasync function handleResponse(response) {\n  if (response.ok) {\n    const responseData = await response.json();\n    return {\n      success: true,\n      data: responseData\n    };\n  } else {\n    const responseData = await response.json();\n    return {\n      success: false,\n      error: responseData.errors\n    };\n  }\n}\nexport default API;","map":{"version":3,"names":["BASE_URL","API","postLogin","formData","endpoint","fetchAndHandleResponse","postForm","getUserData","userId","headers","getHeadersWithToken","updateUserData","newData","deleteUser","getForm","formId","updateForm","updatedFormData","deleteForm","getAllForms","storeToken","token","localStorage","setItem","getToken","getItem","removeToken","removeItem","method","body","response","fetch","JSON","stringify","undefined","handleResponse","error","success","ok","responseData","json","data","errors"],"sources":["/Users/sebas/Documents/Proyectos/CyberGuard/frontend/src/context/Api.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8000';\n\nconst API = {\n  async postLogin(formData) {\n    const endpoint = '/user/login';\n\n    return await fetchAndHandleResponse(endpoint, 'POST', formData);\n  },\n\n  async postForm(formData) {\n    const endpoint = '/form';\n    return await fetchAndHandleResponse(endpoint, 'POST', formData);\n  },\n\n  async getUserData(userId) {\n    const endpoint = `/user/${userId}`;\n    const headers = getHeadersWithToken();\n\n    return await fetchAndHandleResponse(endpoint, 'GET', headers);\n  },\n\n  async updateUserData(userId, newData) {\n    const endpoint = `/user/${userId}`;\n    const headers = getHeadersWithToken();\n\n    return await fetchAndHandleResponse(endpoint, 'PUT', headers, newData);\n  },\n\n  async deleteUser(userId) {\n    const endpoint = `/user/${userId}`;\n    const headers = getHeadersWithToken();\n\n    return await fetchAndHandleResponse(endpoint, 'DELETE', headers);\n  },\n\n  async getForm(formId) {\n    const endpoint = `/form/${formId}`;\n    const headers = getHeadersWithToken();\n\n    return await fetchAndHandleResponse(endpoint, 'GET', headers);\n  },\n\n  async updateForm(formId, updatedFormData) {\n    const endpoint = `/form/${formId}`;\n    const headers = getHeadersWithToken();\n\n    return await fetchAndHandleResponse(endpoint, 'PUT', headers, updatedFormData);\n  },\n\n  async deleteForm(formId) {\n    const endpoint = `/form/${formId}`;\n    const headers = getHeadersWithToken();\n\n    return await fetchAndHandleResponse(endpoint, 'DELETE', headers);\n  },\n\n  async getAllForms() {\n    const endpoint = '/form';\n    const headers = getHeadersWithToken();\n\n    return await fetchAndHandleResponse(endpoint, 'GET', headers);\n  },\n\n  storeToken(token) {\n    localStorage.setItem('token', token);\n  },\n\n  getToken() {\n    return localStorage.getItem('token');\n  },\n\n  removeToken() {\n    localStorage.removeItem('token');\n  },\n};\n\nasync function fetchAndHandleResponse(endpoint, method, headers, body) {\n  try {\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined,\n    });\n\n    return await handleResponse(response);\n  } catch (error) {\n    return { success: false, error: 'Error de red' };\n  }\n}\n\nfunction getHeadersWithToken() {\n  const token = API.getToken();\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  return headers;\n}\n\nasync function handleResponse(response) {\n  if (response.ok) {\n    const responseData = await response.json();\n    return { success: true, data: responseData };\n  } else {\n    const responseData = await response.json();\n    return { success: false, error: responseData.errors };\n  }\n}\n\nexport default API;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}